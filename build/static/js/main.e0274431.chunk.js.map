{"version":3,"sources":["assets/HarryPotter.svg","logo.svg","assets/Background.png","app/actions.js","components/Filters/index.jsx","components/Characters/index.jsx","components/FavoriteTag/index.jsx","components/Trash/index.jsx","components/Favorites/index.jsx","components/User/index.jsx","components/Modal/Modal.jsx","components/Modal/ModalComponent.jsx","components/AddCharacterForm/index.jsx","components/Cross/index.jsx","App.js","serviceWorker.js","app/reducer.js","index.js"],"names":["fetchCharacters","dispatch","a","type","Axios","get","response","payload","data","error","fetchFavoriteCharacters","Filters","useDispatch","state","useSelector","className","classNames","filter","onClick","colorByHouse","house","Index","useEffect","loading","characters","map","character","style","background","backgroundImage","image","alt","alive","person","hogwartsStaff","FavoriteTag","favorite","id","getState","e","length","patch","name","dateOfBirth","gender","eyeColour","hairColour","renderCards","props","width","height","viewBox","fill","xmlns","d","stroke","stroke-width","stroke-linecap","useState","showFavorites","setShowFavorites","isOpenModal","setIsOpenModal","User","favorites","el","Trash","setShowModal","AddCharacterForm","fill-rule","clip-rule","cx","cy","r","Modal","children","escFunction","event","keyCode","document","addEventListener","removeEventListener","createPortal","target","body","ModalComponent","overflow","showModal","defaultProps","fileInput","useRef","binary","setBinary","useForm","register","handleSubmit","errors","watch","formState","onSubmit","pos","newData","hogwartsStudent","post","postNewCharacter","alert","Cross","required","value","onChange","photo","files","size","reader","FileReader","onload","evt","contents","result","readAsDataURL","ref","accept","App","Favorites","src","HarryPotter","Characters","Boolean","window","location","hostname","match","initState","charactersReducer","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0274431.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/HarryPotter.8f12e92c.svg\";","export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","export default __webpack_public_path__ + \"static/media/Background.413cb15c.png\";","import Axios from \"axios\"\n\nexport const fetchCharacters = () => async (dispatch) => {\n\n  dispatch({ type: \"FETCH_POSTS_REQUESTS\" })\n  try {\n    const response = await Axios.get(\"http://localhost:4000/characters\");\n    dispatch({ type: \"FETCH_POSTS_SUCCESS\", payload: response.data })\n  } catch (error) {\n    dispatch({ type: \"FETCH_POSTS_FAILURE\", error })\n  }\n}\nexport const fetchFavoriteCharacters = () => async (dispatch) => {\n\n  dispatch({ type: \"FETCH_POSTS_REQUESTS\" })\n  try {\n    const response = await Axios.get(\"http://localhost:4000/characters?favorite=true\");\n    dispatch({ type: \"FETCH_FAVORITES_SUCCESS\", payload: response.data })\n  } catch (error) {\n    dispatch({ type: \"FETCH_POSTS_FAILURE\", error })\n  }\n}\nexport const removeFromFavorites = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: \"REMOVE_FAVORITE_CHARACTER\" })\n    const response = await Axios.patch(`http://localhost:4000/characters/${id}`, { favorite: false });\n    if (response) {\n      dispatch(fetchCharacters())\n      dispatch(fetchFavoriteCharacters())\n    }\n  } catch (error) {\n    dispatch({ type: \"FETCH_POSTS_FAILURE\", error })\n  }\n}\nexport const addToFavorites = (id) => async (dispatch, getState) => {\n  try {\n    const { characters } = getState()\n    if (characters.filter(e => e.favorite).length < 5) {\n      dispatch({ type: \"ADD_FAVORITE_CHARACTER\" })\n      const response = await Axios.patch(`http://localhost:4000/characters/${id}`, { favorite: true });\n      if (response) {\n        dispatch(fetchCharacters())\n        dispatch(fetchFavoriteCharacters())\n      }\n    }\n  } catch (error) {\n\n  }\n}\n\nexport const filterByStudent = () => async (dispatch) => {\n  dispatch({ type: \"FETCH_POSTS_REQUESTS\" })\n  try {\n    const response = await Axios.get(\"http://localhost:4000/characters?hogwartsStudent=true\");\n    dispatch({ type: \"FETCH_BY_STUDENT_SUCCESS\", payload: response.data })\n  } catch (error) {\n    dispatch({ type: \"FETCH_POSTS_FAILURE\", error })\n  }\n}\nexport const filterByStaff = () => async (dispatch) => {\n  dispatch({ type: \"FETCH_POSTS_REQUESTS\" })\n  try {\n    const response = await Axios.get(\"http://localhost:4000/characters?hogwartsStaff=true\");\n    // const newData = response.data.map((e, id) => {\n    //   return { ...e, id: id + 1, favorite: false }\n    // });\n\n    dispatch({ type: \"FETCH_BY_STAFF_SUCCESS\", payload: response.data })\n  } catch (error) {\n    dispatch({ type: \"FETCH_POSTS_FAILURE\", error })\n  }\n}\nexport const postNewCharacter = (data) => async (dispatch) => {\n  dispatch({ type: \"FETCH_POSTS_REQUESTS\" })\n  try {\n    const response = await Axios.post(\"http://localhost:4000/characters\", data);\n    dispatch({ type: \"POST_CHARACTER_REQUESTS_SUCCESS\", payload: response.data })\n    if (response) {\n      dispatch(fetchCharacters())\n      dispatch(fetchFavoriteCharacters())\n    }\n  } catch (error) {\n    dispatch({ type: \"FETCH_POSTS_FAILURE\", error })\n  }\n}\n\n// const promise = Axios.get(\n//   \"http://localhost:4000/characters\"\n// )\n\n// return {\n//   type: \"FETCH_POSTS\",\n//   payload: promise\n// }","import React from 'react'\nimport classNames from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCharacters, addToFavorites, filterByStudent, filterByStaff } from './../../app/actions';\nexport const Filters = () => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state)\n  return (\n    <div className=\"filtersContainer\">\n      <button className={classNames(\"buttonFilter\", { \"isActive\": state.filter === \"student\" })} onClick={() => {\n        dispatch(filterByStudent())\n      }}>Estudiantes</button><button className={classNames(\"buttonFilter\", { \"isActive\": state.filter === \"staff\" })} onClick={() => {\n        dispatch(filterByStaff())\n      }}>Staff</button>\n    </div>\n  )\n}\nexport default Filters","import React, { useEffect } from 'react'\nimport { FavoriteTag } from '..'\nimport classNames from 'classnames'\nimport { Axios } from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCharacters, addToFavorites } from './../../app/actions';\nfunction isStudent(person) {\n  const { hogwartsStaff } = person\n  return hogwartsStaff ? \"Staff\" : \"Estudiante\"\n\n}\nfunction colorByHouse(house) {\n  switch (house) {\n    case \"Gryffindor\":\n      return \"linear-gradient(135deg, #FF0000 0%, #fe8482 100%)\"\n\n    case \"Slytherin\":\n      return \"linear-gradient(135deg, #1C792B 0%, #82E95E 100%)\"\n    case \"Hufflepuff\":\n      return \"linear-gradient(135deg, #FFC700 0%, #FFF388 100%)\"\n    case \"Ravenclaw\":\n      return \"linear-gradient(135deg, #0597B7 0%, #66D1FF 100%)\"\n    default:\n      return \"linear-gradient(135deg, #ffffff 0%, #000000 100%)\"\n  }\n\n}\n\nexport const Index = () => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state)\n  useEffect(() => {\n    dispatch(fetchCharacters())\n  }, []);\n\n  function renderCards() {\n    if (state.loading) {\n      return <h1>Loading...</h1>\n    }\n    return state.characters?.map(character => {\n      return (\n        <div className=\"characterCard\">\n          <div style={{ background: colorByHouse(character.house) }} className=\"imgContainer\">\n            <div className=\"characterImg\" style={{ backgroundImage: `url(${character.image})` }} alt=\"\" />\n          </div>\n          <div className=\"descriptionContainer\">\n            <div className=\"headerDescription\">\n              <p>{character.alive ? \"Vivo\" : \"Muerto\"} / {isStudent(character)}</p>\n              <FavoriteTag\n                className={classNames('favTag', { favorite: character?.favorite })}\n                onClick={() => {\n                  dispatch(addToFavorites(character.id))\n                }}\n              />\n            </div>\n            <h1>{character.name}</h1>\n            <div className=\"detailsCharacter\">\n              <p>Cumpleaños: {character.dateOfBirth || \"Sin datos\"}</p>\n              <p>Género:{character.gender || \"Sin datos\"}</p>\n              <p>Color de ojos: {character.eyeColour || \"Sin datos\"}</p>\n              <p>Color de pelo: {character.hairColour || \"Sin datos\"}</p>\n            </div>\n\n          </div>\n        </div>\n      )\n    })\n\n  }\n  return <>{renderCards()}</>\n\n\n};\n\nexport default Index\n","import React from 'react'\n\nconst Index = (props) => {\n  return (\n    <svg {...props} width=\"22\" height=\"24\" viewBox=\"0 0 22 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M1 8.60073C1 5.01771 1 3.2262 2.09835 2.1131C3.1967 1 4.96447 1 8.5 1H13.5C17.0355 1 18.8033 1 19.9017 2.1131C21 3.2262 21 5.01771 21 8.60073V17.2499C21 20.649 21 22.3486 19.9446 22.8684C18.8893 23.3883 17.5706 22.3382 14.9332 20.2382L14.0891 19.5661C12.6061 18.3852 11.8647 17.7948 11 17.7948C10.1353 17.7948 9.39386 18.3852 7.91089 19.5661L7.06683 20.2382C4.42943 22.3382 3.11073 23.3883 2.05537 22.8684C1 22.3486 1 20.649 1 17.2499V8.60073Z\" stroke=\"#999999\" />\n    </svg>\n  )\n}\nexport default Index","import React from 'react'\n\nconst Index = (props) => {\n  return (\n    <svg {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M10 15L10 12\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" />\n      <path d=\"M14 15L14 12\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" />\n      <path d=\"M3 7H21V7C20.0681 7 19.6022 7 19.2346 7.15224C18.7446 7.35523 18.3552 7.74458 18.1522 8.23463C18 8.60218 18 9.06812 18 10V16C18 17.8856 18 18.8284 17.4142 19.4142C16.8284 20 15.8856 20 14 20H10C8.11438 20 7.17157 20 6.58579 19.4142C6 18.8284 6 17.8856 6 16V10C6 9.06812 6 8.60218 5.84776 8.23463C5.64477 7.74458 5.25542 7.35523 4.76537 7.15224C4.39782 7 3.93188 7 3 7V7Z\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" />\n      <path d=\"M10.0681 3.37059C10.1821 3.26427 10.4332 3.17033 10.7825 3.10332C11.1318 3.03632 11.5597 3 12 3C12.4403 3 12.8682 3.03632 13.2175 3.10332C13.5668 3.17033 13.8179 3.26427 13.9319 3.37059\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    </svg>\n  )\n}\nexport default Index\n\n\n\n","import React, { useState, useEffect } from 'react'\nimport classNames from 'classnames';\nimport { Trash, User, FavoriteTag, ModalComponent, AddCharacterForm } from '..';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchFavoriteCharacters, removeFromFavorites } from '../../app/actions';\nconst Index = () => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state)\n  const [showFavorites, setShowFavorites] = useState(false);\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  useEffect(() => {\n    dispatch(fetchFavoriteCharacters())\n  }, []);\n  return (\n    <div className=\"favoritesMainContainer\">\n      <div className=\"favButtonsContainer\">\n        <button onClick={() => { setShowFavorites(!showFavorites) }}>\n          Favorites\n          <FavoriteTag className=\"favIcons\" />\n        </button>\n        <button onClick={() => {\n          setIsOpenModal(true)\n        }}>Agregar <User className=\"favIcons\" /></button>\n      </div>\n      <div className={classNames(\"favoritesList\", { \"favoritesListShow\": showFavorites })}>\n        {state?.favorites?.map(el => {\n          return (\n            <div className=\"favoriteElementContainer\">\n              <div className=\"favoriteElement\">\n                <div className=\"favoriteImg\" style={{ backgroundImage: `url(${el.image})` }} alt=\"\" />\n                <p>{el.name}</p>\n                <Trash className=\"favIcons\" onClick={() => {\n                  dispatch(removeFromFavorites(el.id))\n                }} />\n              </div>\n              <hr />\n            </div>\n          )\n        })}\n      </div>\n      <ModalComponent\n        className=\"generalContainerModal\"\n        isOpenModal={isOpenModal}\n        setShowModal={e => {\n          setIsOpenModal(e);\n        }}\n      >\n        <div className=\"modalContent\">\n          <AddCharacterForm setShowModal={e => {\n            setIsOpenModal(e);\n          }} />\n        </div>\n\n\n      </ModalComponent>\n    </div>\n  )\n}\n\nexport default Index\n","import React from 'react'\n\nconst Index = (props) => {\n  return (\n    <svg {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.3249 15.0763C12.8883 15.0257 12.4456 15 12 15C10.0188 15 8.09292 15.5085 6.52112 16.4465C5.30069 17.1749 4.34666 18.1307 3.74108 19.2183C3.46638 19.7117 3.79562 20.2902 4.34843 20.4054C7.85678 21.1365 11.4437 21.3594 15 21.074V21H14C12.3431 21 11 19.6569 11 18C11 16.5753 11.9932 15.3825 13.3249 15.0763Z\" fill=\"white\" />\n      <path d=\"M18 14L18 22\" stroke=\"white\" stroke-width=\"2.5\" stroke-linecap=\"round\" />\n      <path d=\"M22 18L14 18\" stroke=\"white\" stroke-width=\"2.5\" stroke-linecap=\"round\" />\n      <circle cx=\"12\" cy=\"8\" r=\"5\" fill=\"white\" />\n    </svg>\n  )\n}\nexport default Index\n\n\n\n\n","import React, { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nconst Modal = ({ isOpenModal, setShowModal, children, className }) => {\n  const escFunction = event => {\n    if (event.keyCode === 27) {\n      setShowModal(false);\n    }\n  };\n  useEffect(() => {\n    if (isOpenModal) {\n      document.addEventListener(\"keydown\", escFunction, false);\n    }\n\n    return () => {\n      document.removeEventListener(\"keydown\", escFunction, false);\n    };\n  });\n  return (\n    createPortal(\n      <div\n        onClick={e => {\n          if (e.target.id === \"modalContainer\") { setShowModal(false); }\n        }}\n        className={className}\n        id=\"modalContainer\"\n      >\n        {children}\n      </div>,\n      document.body,\n    )\n  );\n};\nexport default Modal;\n","import React, { useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport { node, bool, func, string } from \"prop-types\";\nimport Modal from \"./Modal\";\n\nconst ModalComponent = ({ children, isOpenModal, setShowModal, className }) => {\n\n  useEffect(() => {\n    document.body.style.overflow = isOpenModal ? \"hidden\" : \"auto\"\n  }, [isOpenModal]);\n  return (\n    <>\n      {\n        isOpenModal && (\n          <Modal\n            isOpenModal={isOpenModal}\n            setShowModal={e => { setShowModal(e); }}\n            className={classNames(\n              \"modalContainer\", className)}\n            showModal={isOpenModal}\n          >\n            {children}\n          </Modal>\n        )\n      }\n    </>\n  )\n};\nModalComponent.propTypes = {\n  children: node.isRequired,\n  isOpenModal: bool.isRequired,\n  setShowModal: func.isRequired,\n  className: string,\n};\nModalComponent.defaultProps = {\n  className: \"\",\n};\nexport default ModalComponent;\n","import React, { useRef, useState } from 'react'\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postNewCharacter } from '../../app/actions';\nimport { Cross } from '..';\nconst Index = ({ setShowModal }) => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state)\n  const fileInput = useRef(null);\n  const [binary, setBinary] = useState(null);\n  const { register, handleSubmit, watch, formState: { errors } } = useForm();\n  const onSubmit = data => {\n\n    if (binary) {\n      const { name,\n        dateOfBirth,\n        eyeColour,\n        hairColour,\n        gender,\n        pos } = data;\n      const newData = {\n        alive: true,\n        dateOfBirth,\n        eyeColour,\n        favorite: false,\n        gender,\n        hairColour,\n        hogwartsStaff: pos === \"staff\",\n        hogwartsStudent: pos === \"student\",\n        house: \"Gryffindor\",\n        id: state.characters.length + 1,\n        image: binary,\n        name\n      }\n      dispatch(postNewCharacter(newData))\n      setShowModal(false)\n      return false\n    }\n    alert(\"No se encontro una imagen seleccionada\")\n  };\n\n  const getBinary = (e) => {\n    const photo = e?.target?.files[0]\n    if (photo) {\n      if (photo.size > 1316406) {\n        alert(\"El tamaño de la imagen supera lo permitido, por favor selecciona una imagen valida\")\n        setBinary(null)\n        return;\n      }\n      const reader = new FileReader();\n      reader.onload = function (evt) {\n        const contents = evt.target.result;\n        setBinary(contents)\n      };\n      reader.readAsDataURL(photo);\n      return false;\n    }\n\n    setBinary(null)\n  }\n\n  return (\n    <form className=\"formAddCharacter\" onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"headerContainer\">\n        <h1>Agrega un personaje</h1>\n        <Cross onClick={() => { setShowModal(false) }} />\n      </div>\n      <div className=\"labelContainer\">\n        <label>\n          NOMBRE\n          <input type=\"text\"  {...register(\"name\", { required: true })} />\n          {errors.name && <span className=\"error\">Campo requerido*</span>}\n\n        </label>\n        <label>\n          CUMPLEAÑOS\n          <input type=\"date\" {...register(\"dateOfBirth\", { required: true })} />\n          {errors.dateOfBirth && <span className=\"error\">Campo requerido*</span>}\n        </label>\n      </div>\n\n      <div className=\"labelContainer\">\n        <label>\n          COLOR DE OJOS\n          <input type=\"text\"  {...register(\"eyeColour\", { required: true })} />\n          {errors.eyeColour && <span className=\"error\">Campo requerido*</span>}\n        </label>\n        <label>\n          COLOR DE PELO\n          <input type=\"text\"  {...register(\"hairColour\", { required: true })} />\n          {errors.hairColour && <span className=\"error\">Campo requerido*</span>}\n        </label>\n      </div>\n\n      <div className=\"labelContainer\">\n        <label>\n          GÉNERO\n          <div className=\"radioContainer\">\n            <div>\n              <input type=\"radio\" value=\"male\" {...register(\"gender\", { required: true })} />\n              <p>Male</p>\n            </div>\n            <div>\n              <input type=\"radio\" value=\"female\" {...register(\"gender\", { required: true })} />\n              <p>Female</p>\n            </div>\n            {errors.gender && <span className=\"error\">Campo requerido*</span>}\n          </div>\n        </label>\n        <label>\n          POSICIÓN\n          <div className=\"radioContainer\">\n            <div>\n              <input type=\"radio\" value=\"student\" {...register(\"pos\", { required: true })} />\n              <p>Estudiante</p>\n            </div>\n            <div>\n              <input type=\"radio\" value=\"staff\" {...register(\"pos\", { required: true })} />\n              <p>Staff</p>\n            </div>\n            {errors.pos && <span className=\"error\">Campo requerido*</span>}\n          </div>\n        </label>\n      </div>\n\n      <label> FOTOGRAFIA\n        <input\n          onChange={getBinary}\n          type=\"file\" ref={fileInput}\n          accept=\"image/*\"\n          size={500}\n        />\n      </label>\n      <input type=\"submit\" value=\"GUARDAR\" />\n    </form>\n  )\n}\n\nexport default Index\n\n","import React from 'react'\n\nconst Index = (props) => {\n  return (\n    <svg {...props} width=\"34\" height=\"34\" viewBox=\"0 0 34 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width=\"34\" height=\"34\" fill=\"white\" />\n      <circle cx=\"17\" cy=\"17\" r=\"12.75\" stroke=\"#333333\" />\n      <path d=\"M12.75 21.2495L21.25 12.7495\" stroke=\"#333333\" />\n      <path d=\"M21.25 21.25L12.75 12.75\" stroke=\"#333333\" />\n    </svg>\n  )\n}\nexport default Index\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport HarryPotter from './assets/HarryPotter.svg'\nimport background from './assets/Background.png'\nimport { Filters, Characters, Favorites } from './components';\n\nfunction App() {\n  return (\n    <div\n      className=\"App\">\n      <header className=\"App-header\">\n        <Favorites />\n      </header>\n      <main className=\"main\">\n        <img src={HarryPotter} className=\"App-logo\" alt=\"logo\" />\n        <h1>Selecciona tu filtro</h1>\n        <Filters />\n        <div className=\"charactersContainer\">\n          <Characters />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","\nconst initState = {\n  characters: [],\n  loading: false,\n  error: null,\n  filter: \"\",\n  favorites: []\n};\nconst charactersReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"FETCH_POSTS_REQUESTS\":\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      }\n    case \"FETCH_POSTS_SUCCESS\":\n      return {\n        ...state,\n        characters: action.payload,\n        loading: false,\n      }\n    case \"FETCH_POSTS_FAILURE\":\n      return {\n        ...state,\n        loading: false,\n        error: action.error\n      }\n    case \"REMOVE_FAVORITE_CHARACTER\":\n      return {\n        ...state,\n        loading: false,\n        filter: \"\"\n      }\n    case \"ADD_FAVORITE_CHARACTER\":\n      return {\n        ...state,\n        loading: false,\n        filter: \"\"\n      }\n    case \"FETCH_BY_STUDENT_SUCCESS\":\n      return {\n        ...state,\n        characters: action.payload,\n        loading: false,\n        filter: \"student\"\n      }\n    case \"FETCH_BY_STAFF_SUCCESS\":\n      return {\n        ...state,\n        characters: action.payload,\n        loading: false,\n        filter: \"staff\"\n      }\n    case \"FETCH_FAVORITES_SUCCESS\":\n      return {\n        ...state,\n        favorites: action.payload,\n        loading: false,\n      }\n    case \"POST_CHARACTER_REQUESTS_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n      }\n    default:\n      return state;\n  }\n}\n\nexport default charactersReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n//import { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk'\nimport charactersReducer from './app/reducer';\nconst store = createStore(\n  charactersReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n)\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}